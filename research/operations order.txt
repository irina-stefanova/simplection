1. run transpose/group functions
2. run stacking/clustering/overlapping/ordering functions
3. data values to coordinates (processing)
4. run path drawing on points functions 
5. run clip figure function
6. run styling


PGroup
	transpose-data
	group-data

PArrangement
	arrange-data-points
	
		defrecord Stacked
		defrecord Stacked100
		defrecord Clustered
		defrecord Overlapped
		defrecord Ranged []

PInterpolation
	interpolate
	
		defrecord LinearInterpolation
		defrecord PolynomialInterpolation

PExtrapolation
	extrapolate
		
		defrecord LinearExtrapolation
		defrecord PolynomialExtrapolation
		defrecord ConicalExtrapolation
		defrecord FrenchCurveExtrapolation
		
PDataPathGeometry
	generate-data-path
	
		nil // no data path
		defrecord Straight
		defrecord Bezier
		defrecord Stepped
		defrecord HorizontalLine
		defrecord VerticalLine

PAreaGeometry
	generate-auxiliary-paths
	generate-areas
	
		nil // no area or auxiliary path
		defrecord ToAxis
		defrecord ToPoint
	
PMask
	apply-mask
	
		nil // no mask
		defrecord StandardMask

PStyle
	line
	area
	
	
	
	1. run transpose/group functions
2. run stacking/clustering/overlapping/ordering functions
3. data values to coordinates (processing)
4. run path drawing on points functions 
5. run clip figure function
6. run styling


PGrouping
	transpose-data
	group-data

PArrangement
	arrange-data-points
	
		defrecord Stacked
		defrecord Stacked100
		defrecord Clustered
		defrecord Overlapped
		defrecord Ranged []

PInterpolation
	interpolate
	
		defrecord LinearInterpolation
		defrecord PolynomialInterpolation

PExtrapolation
	extrapolate
		
		defrecord LinearExtrapolation
		defrecord PolynomialExtrapolation
		defrecord ConicalExtrapolation
		defrecord FrenchCurveExtrapolated
		
PDataPathGeometry
	generate-data-path
	
		nil // no data path
		defrecord Straight
		defrecord Bezier
		defrecord Stepped
		defrecord HorizontalLine
		defrecord VerticalLine
		

PAreaGeometry
	generate-auxiliary-paths
	generate-areas
	
		nil // no area or auxiliary path
		defrecord ToAxisRectangle
		defrecord ToPointRectangle
	
PClipGeometry
	clip	
	
PStyle
	stroke
	fill
		
		defrecord Style [colors-coll]
	area